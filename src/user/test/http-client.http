###
GET http://localhost:{{port}}/?a=1

###
WEBSOCKET ws://localhost:{{port}}/

###
POST http://localhost:{{port}}/?a=1
Content-Type: application/x-www-form-urlencoded

id=999&value=content

###
GET http://localhost:{{port}}/
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:107.0) Gecko/20100101 Firefox/107.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: ru,en;q=0.8,de;q=0.6,uk;q=0.4,be;q=0.2
Accept-Encoding: gzip, deflate, br
Connection: keep-alive
Cookie: secret=dfe83f04-2d13-4914-88dd-5005ac317936
Upgrade-Insecure-Requests: 1
Sec-Fetch-Dest: document
Sec-Fetch-Mode: navigate
Sec-Fetch-Site: none
Sec-Fetch-User: ?1
Sec-GPC: 1
x-a: a1
x-a: a2

### Simple WebSocket Request
// It is possible to send messages to server right from the Services tool window
WEBSOCKET ws://localhost:{{port}}/ws

### Request with client messages
// It is possible to specify client messages in request body. Use '===' to separate messages.
// Add '=== wait-for-server' above a message to send it after a server response is received.
// To wait for N responses, add '=== wait-for-server' N times.
WEBSOCKET ws://localhost:{{port}}/ws
Content-Type: application/json // We use it for highlighting

===
{
  "message": "Hello, server!",
  "repeat": 3
}
=== wait-for-server
=== wait-for-server
{
  "message": "We send this message...",
  "repeat": 0
}
===
{
  "message": "And this message together",
  "repeat": 1
}
